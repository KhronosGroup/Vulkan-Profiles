# Copyright (c) 2023 Valve Corporation
# Copyright (c) 2023 LunarG, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: profiles

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  # github.head_ref is only defined on pull_request
  # Fallback to the run ID, which is guaranteed to be both unique and defined for the run.
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id  }}
  cancel-in-progress: true

on:
    push:
    pull_request:
        branches:
            - main

permissions:
  contents: read

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Install jsonschema
        run: python3 -m pip install jsonschema
      - uses: lukka/get-cmake@latest
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-ccache
      - name: Add ccache to PATH
        run: echo "/usr/lib/ccache:/usr/local/opt/ccache/libexec" >> $GITHUB_PATH
      - name: Configure/Generate
        run: cmake -S. -B build -D PROFILES_BUILD_TESTS=OFF -D UPDATE_DEPS=ON -DCMAKE_BUILD_TYPE=Release -G "Ninja"
        env:
          # Ensure we can build against 10.15: https://cmake.org/cmake/help/latest/envvar/MACOSX_DEPLOYMENT_TARGET.html
          MACOSX_DEPLOYMENT_TARGET: 10.15
      - name: Build
        run: cmake --build build --config Release
      - name: Install
        run: cmake --install build --prefix build/install --config Release

  ubuntu-latest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config: [Debug, Release]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Install jsonschema
        run: python3 -m pip install jsonschema
      - name: Install Dependencies
        run: sudo apt update && sudo apt install --yes --no-install-recommends libwayland-dev libxrandr-dev
      - uses: lukka/get-cmake@latest
        with:
          cmakeVersion: 3.17.2
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-${{ matrix.config }}
      - name: Add ccache to PATH
        run: echo "/usr/lib/ccache" >> $GITHUB_PATH
      - name: Configure/Generate
        run: cmake -S. -B build -D PROFILES_BUILD_TESTS=OFF -D UPDATE_DEPS=ON -DCMAKE_BUILD_TYPE=${{matrix.config}} -G "Ninja"
      - name: Build
        run: cmake --build build --config ${{matrix.config}}
      - name: Install
        run: cmake --install build --prefix build/install --config ${{matrix.config}}

  android:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Install jsonschema
        run: python3 -m pip install jsonschema
      - uses: lukka/get-cmake@latest
      - name: Configure
        run: |
          cmake -S . -B build/ --toolchain $ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake \
          -D ANDROID_PLATFORM=26 \
          -D CMAKE_ANDROID_ARCH_ABI=x86_64 \
          -D CMAKE_ANDROID_STL_TYPE=c++_static \
          -D CMAKE_ANDROID_RTTI=YES \
          -D CMAKE_ANDROID_EXCEPTIONS=YES \
          -D ANDROID_BUILD_TOOLS=34.0.0 \
          -D ANDROID_USE_LEGACY_TOOLCHAIN_FILE=NO \
          -D BUILD_WERROR=ON \
          -D CMAKE_BUILD_TYPE=Release \
          -D UPDATE_DEPS=ON \
          -D PROFILES_BUILD_TESTS=OFF \
          -G "Ninja"
      - name: Build
        run: cmake --build build
      - name: Install
        run: cmake --install build --prefix build/install

  windows-latest:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [ x64, Win32 ]
        config: [ debug, release ]
        exclude:
          - arch: Win32
            config: release
          - arch: x64
            config: debug
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Install jsonschema
        run: python3 -m pip install jsonschema
      - uses: lukka/get-cmake@latest
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
      - name: Configure/Generate
        run: cmake -S. -B build -D PROFILES_BUILD_TESTS=OFF -D UPDATE_DEPS=ON -DCMAKE_BUILD_TYPE=${{matrix.config}} -G "Ninja"
      - name: Build
        run: cmake --build build --config ${{matrix.config}}
      - name: Install
        run: cmake --install build --prefix build/install --config ${{matrix.config}}
